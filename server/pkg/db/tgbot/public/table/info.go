//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Info = newInfoTable("public", "info", "")

type infoTable struct {
	postgres.Table

	//Columns
	Creator   postgres.ColumnString
	Purpose   postgres.ColumnString
	Starttime postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type InfoTable struct {
	infoTable

	EXCLUDED infoTable
}

// AS creates new InfoTable with assigned alias
func (a InfoTable) AS(alias string) *InfoTable {
	return newInfoTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new InfoTable with assigned schema name
func (a InfoTable) FromSchema(schemaName string) *InfoTable {
	return newInfoTable(schemaName, a.TableName(), a.Alias())
}

func newInfoTable(schemaName, tableName, alias string) *InfoTable {
	return &InfoTable{
		infoTable: newInfoTableImpl(schemaName, tableName, alias),
		EXCLUDED:  newInfoTableImpl("", "excluded", ""),
	}
}

func newInfoTableImpl(schemaName, tableName, alias string) infoTable {
	var (
		CreatorColumn   = postgres.StringColumn("creator")
		PurposeColumn   = postgres.StringColumn("purpose")
		StarttimeColumn = postgres.StringColumn("starttime")
		allColumns      = postgres.ColumnList{CreatorColumn, PurposeColumn, StarttimeColumn}
		mutableColumns  = postgres.ColumnList{CreatorColumn, PurposeColumn, StarttimeColumn}
	)

	return infoTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Creator:   CreatorColumn,
		Purpose:   PurposeColumn,
		Starttime: StarttimeColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
